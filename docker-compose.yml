version: '3.5'
services:

  rabbit:
    container_name: fdemo-rabbit
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'
    expose:
      - 15682
      - 5672

  kibana:
    container_name: fdemo-kibana
    image: docker.elastic.co/kibana/kibana:5.6.9
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: 'http://elasticsearch:9200'
      XPACK_MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED: "false"
    depends_on:
      - elasticsearch
    links:
      - elasticsearch

  elasticsearch:
    container_name: fdemo-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.9
    command: "elasticsearch -E cluster.name=es_flockdata -E node.master=true -E xpack.security.enabled=false"
    ports:
      - '9200:9200'
      - '9300:9300'
    volumes:
      - fd-es:/usr/share/elasticsearch/data
    expose:
      - 9200
      - 9300
    environment:
      - network.host=_global_
      - net=host

  fd-engine:
    container_name: fdemo-engine
    image: flockdata/fd-engine:latest

    ports:
      - '15001:15001'
      - '7474:7474'
      - '61000:61000'
    expose:
      - 15001
      - 7474
      - 61000

    volumes:
      - fd-neo:/opt/flockdata/data

    ulimits:
      nofile:
        soft: 40000
        hard: 40000

    depends_on:
      - rabbit

    environment:
      _JAVA_OPTIONS: "-Xmx2g -Xdebug -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=61000"
#      _JAVA_OPTIONS: "-Xmx2g"
      server.port: 15001
      spring.profiles.active: fd-server,fd-auth-test

      org.fd.discovery.url: http://eureka:8761/eureka/

      org.fd.auth.simple.users.demo.pass: 123
      org.fd.auth.simple.users.demo.roles: FD_USER;FD_ADMIN

      spring.rabbitmq.host: rabbit
      spring.rabbitmq.port: 5672
      org.fd.search.api: http://fd-search:15002
      org.fd.store.api: http://fd-store:15003
      org.neo4j.path: /opt/flockdata
      org.neo4j.server.database.location: /opt/flockdata/data
      org.fd.engine.fortress.store: 'false'
      cors.allowOrigin:  http://0.0.0.0:9000,http://localhost:9000,http://127.0.0.1:9000,http://192.168.99.100,chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop

    links:
      - rabbit

  fd-search:
    container_name: fdemo-search
    image: flockdata/fd-search:latest
    ports:
     - '15002:15002'
    expose:
      - 15002

    depends_on:
      - elasticsearch
      - rabbit

    links:
      - rabbit
      - elasticsearch

    ulimits:
      nofile:
        soft: 40000
        hard: 40000

    environment:
      server.port: 15002
      spring.profiles.active: fd-server,discovery
      _JAVA_OPTIONS: "-Xmx2g"

      org.fd.discovery.url: http://eureka:8761/eureka/

      spring.rabbitmq.host: rabbit

      org.fd.engine.url: 'http://fd-engine:15001'
      #Is the node going to be a client node which means it will hold no data
      org.fd.search.es.transportOnly: "true"
      # A local node is a node that uses a local (JVM level) discovery and transport
      org.fd.search.es.local: "false"
      # , separated list of hosts to connect to if transportOnly == true
      es.nodes: elasticsearch:9300
      es.clustername: 'es_flockdata'
      es.path.home: /opt/flockdata
      es.path.data: /opt/flockdata/data

  fd-view:
    container_name: fdemo-view
    image: flockdata/fd-view
    ports:
      - target: 80
        published: 9000
        protocol: tcp
        mode: host
    environment:
      ENGINE_URL: 'http://localhost:9000/api'
    links:
      - fd-engine
    depends_on:
      - fd-engine

  #  fd-store:
  #    container_name: fdemo-store
  #    image: flockdata/fd-store:latest
  #    ports:
  #     - '15003:15003'
  #
  #    expose:
  #      - 15003
  #
  #    depends_on:
  #      - rabbit
  #      #      - eureka
  #      - riak
  #
  #    environment:
  #      _JAVA_OPTIONS: "-Xmx1g"
  #      spring.profiles.active: fd-server,discovery,riak
  #      server.port: 15003
  #      spring.rabbitmq.host: rabbit
  #
  #      org.fd.discovery.url: http://eureka:8761/eureka/
  #      riak.hosts: riak
  #      es.clustername: 'es_flockdata'

  #  riak:
  #    container_name: fdemo-riak
  #    image: lapax/riak:latest
  #    ports:
  #      - '8087:8087'
  #    environment:
  #      storage_backend: leveldb
  #      platform_data_dir: /data/riak
  #    volumes:
  #      - ./data/riak:/data/riak
# Monitoring tools
#  eureka:
#    container_name: fdemo-discovery
#    image: flockdata/fd-discovery:0.98.2
#    ports:
#      - '8761:8761'
#    expose:
#      - 8761
#    environment:
#      eureka.server.enable-self-preservation: 'true'

  #config:
  #  container_name: fd-config
  #  image: flockdata/fd-config:latest
  #  ports:
  #    - '8888:8888'

#  scope:
#    image: weaveworks/scope
#    container_name: fdemo-weavescope
#    volumes:
#      - '/var/run/:/var/run:rw'
#    command:
#      - '--probe.docker'
#      - 'true'
#    network_mode: 'host'
#    pid: 'host'
#    ports:
#      - '4040:4040'
#    privileged: true

#  grafana:
#    container_name: grafana
#    image: grafana/grafana
#    ports:
#       - 3000:3000
#    depends_on:
#      - elasticsearch
#    links:
#      - elasticsearch


networks:
  default:
    # Use the overlay driver for multi-host communication
    driver: bridge

## You need to create your volumes. Something along the lines of:
## docker volume create --name fd-neo
volumes:
  fd-es: {}

  fd-neo: {}

  fd-riak: {}

